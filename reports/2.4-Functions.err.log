Traceback (most recent call last):
  File "/mnt/home/rsilva/Documents/miniconda3/envs/datascience/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/mnt/home/rsilva/Documents/miniconda3/envs/datascience/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/rsilva/Documents/miniconda3/envs/datascience/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/rsilva/Documents/miniconda3/envs/datascience/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/mnt/home/rsilva/Documents/miniconda3/envs/datascience/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/mnt/home/rsilva/Documents/miniconda3/envs/datascience/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/mnt/home/rsilva/Documents/miniconda3/envs/datascience/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
x = np.array([[1,2,3], [4,5,7]], dtype=np.float) # crie um objecto numpy to tipo array (vetor ou matriz),
                                                 # especificando o tipo de dados com float (fraÃ§Ã£o)
print(x)
print(type(x))
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[34], line 1[0m
[0;32m----> 1[0m x [38;5;241m=[39m np[38;5;241m.[39marray([[[38;5;241m1[39m,[38;5;241m2[39m,[38;5;241m3[39m], [[38;5;241m4[39m,[38;5;241m5[39m,[38;5;241m7[39m]], dtype[38;5;241m=[39m[43mnp[49m[38;5;241;43m.[39;49m[43mfloat[49m) [38;5;66;03m# crie um objecto numpy to tipo array (vetor ou matriz),[39;00m
[1;32m      2[0m                                                  [38;5;66;03m# especificando o tipo de dados com float (fraÃ§Ã£o)[39;00m
[1;32m      3[0m [38;5;28mprint[39m(x)

File [0;32m/mnt/home/rsilva/Documents/miniconda3/envs/datascience/lib/python3.12/site-packages/numpy/__init__.py:394[0m, in [0;36m__getattr__[0;34m(attr)[0m
[1;32m    389[0m     warnings[38;5;241m.[39mwarn(
[1;32m    390[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mIn the future `np.[39m[38;5;132;01m{[39;00mattr[38;5;132;01m}[39;00m[38;5;124m` will be defined as the [39m[38;5;124m"[39m
[1;32m    391[0m         [38;5;124m"[39m[38;5;124mcorresponding NumPy scalar.[39m[38;5;124m"[39m, [38;5;167;01mFutureWarning[39;00m, stacklevel[38;5;241m=[39m[38;5;241m2[39m)
[1;32m    393[0m [38;5;28;01mif[39;00m attr [38;5;129;01min[39;00m __former_attrs__:
[0;32m--> 394[0m     [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m(__former_attrs__[attr])
[1;32m    396[0m [38;5;28;01mif[39;00m attr [38;5;129;01min[39;00m __expired_attributes__:
[1;32m    397[0m     [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m(
[1;32m    398[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124m`np.[39m[38;5;132;01m{[39;00mattr[38;5;132;01m}[39;00m[38;5;124m` was removed in the NumPy 2.0 release. [39m[38;5;124m"[39m
[1;32m    399[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00m__expired_attributes__[attr][38;5;132;01m}[39;00m[38;5;124m"[39m
[1;32m    400[0m     )

[0;31mAttributeError[0m: module 'numpy' has no attribute 'float'.
`np.float` was a deprecated alias for the builtin `float`. To avoid this error in existing code, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations

